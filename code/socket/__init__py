#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import sys,json,logging
sys.path.append("/Users/admin/Documents/github/UGFAFAFA/code/")

from flask import Flask, render_template,jsonify
from flask import request
from flask_socketio import SocketIO, emit
from flask.json import JSONEncoder

import importlib
app = Flask(__name__)

app.config['SECRET_KEY'] = 'secret!'
socketio = SocketIO(app)

def log(msg):
    socketio.emit(
        'log', {
            "code":1,
            "data":msg
        }
    )

@app.route('/')
def index():
    return render_template('index.html')

############# base 策略 http ##################
@app.route('/base')
def base():
    from Tusharedata.base import search
    bases = search(keyword="")
    return {
        "code":0,
        "data":bases 
    }


############# analyses 策略 http ##################
@app.route('/analyses')
def analyses():
    from Analyse import analyses
    analyses = analyses()
    return {
        "code":0,
        "data":analyses 
    }

@app.route('/analyses/history')
def analysesHistory():
    # try:
    from Analyse.catch import AnalyseCache
    data = request_parse(request) 
    history = AnalyseCache().search(name=data["name"])
    
    return {
        "code":0,
        "data":history
    }
    # except Exception as e:
    #     logging.error(repr(e))
    #     return {
    #         "code":-1,
    #         "data":str(e)
    #     }
   

@app.route('/analyses/bslist')
def analysesBSlist():
    from Analyse.catch import AnalyseBSRecords
    data = request_parse(request)
    buylist = AnalyseBSRecords().search(id= data.id,code=data.code,type=1)
    return {
        "code":0,
        "data":buylist 
    }



@socketio.on('message')
def handle_message(message):
    socketio.emit('my response', message)
 
@socketio.on('analyse')
def handle_my_custom_event(data):
    rjson = json.loads( str(data, 'utf-8'))
    analyse = importlib.import_module("Analyse."+rjson["name"])
    
    analyse.log = log
    analyse.setup()
    socketio.emit(
        'analyse', {
            "code":0,
            "data":"end"
        }
    )

@socketio.on('analyse1')
def handle_my_custom_event(data):
    from Analyse import Analyse
    param = json.loads(data)

    analyse = Analyse(param["name"])
    analyse.setup(
        begin=param["begin"],
        end=param["end"],
        codes=param["codes"],
        parameter=param["parameter"],
        )
  
def request_parse(req_data):
    '''解析请求数据并以json形式返回'''
    if req_data.method == 'POST':
        data = req_data.json
    elif req_data.method == 'GET':
        data = req_data.args
    return data


    

if __name__ == '__main__':
    socketio.run(app, host='0.0.0.0',port=5000, log_output=True)
